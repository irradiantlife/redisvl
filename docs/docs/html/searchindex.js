Search.setIndex({"docnames": ["api/cache", "api/filter", "api/index", "api/query", "api/searchindex", "api/vectorizer", "examples/index", "examples/openai_qna", "index", "user_guide/getting_started_01", "user_guide/hybrid_queries_02", "user_guide/index", "user_guide/llmcache_03", "user_guide/vectorizers_03", "versions"], "filenames": ["api/cache.rst", "api/filter.rst", "api/index.md", "api/query.rst", "api/searchindex.rst", "api/vectorizer.rst", "examples/index.md", "examples/openai_qna.ipynb", "index.md", "user_guide/getting_started_01.ipynb", "user_guide/hybrid_queries_02.ipynb", "user_guide/index.md", "user_guide/llmcache_03.ipynb", "user_guide/vectorizers_03.ipynb", "versions.rst"], "titles": ["LLMCache", "Filter", "RedisVL API", "Query", "Index", "Vectorizer", "Examples", "Question and Answer with OpenAI and RedisVL", "Redis Vector Library (RedisVL)", "Getting Started with RedisVL", "Query", "User Guide", "Semantic Caching", "Vectorizers", "Versions"], "terms": {"class": [0, 1, 3, 4, 5, 9, 10, 12], "index_nam": 0, "cach": [0, 7, 8, 11], "prefix": [0, 4, 7, 9, 10, 12, 13], "threshold": [0, 7, 10, 12], "0": [0, 1, 7, 9, 10, 12, 13], "9": [0, 9, 12], "ttl": 0, "none": [0, 1, 3, 4, 5, 10], "vector": [0, 1, 2, 3, 4, 7, 9, 10, 11, 12], "redisvl": [0, 1, 3, 4, 6, 10, 11, 12, 13, 14], "text": [0, 2, 5, 9, 11, 12], "huggingfac": [0, 9, 11], "hftextvector": [0, 2, 13], "object": [0, 1, 3, 4, 9, 10], "redis_url": [0, 4, 7, 12], "redi": [0, 1, 3, 4, 7, 9, 11, 12, 13], "localhost": [0, 7, 8, 9, 10, 12, 13], "6379": [0, 7, 8, 9, 10, 12, 13], "connection_arg": 0, "index": [0, 1, 2, 7, 8, 10, 11, 12, 13], "sourc": [0, 1, 3, 4, 5], "base": [0, 1, 3, 4, 5, 8, 13], "basellmcach": 0, "larg": [0, 7, 9, 12], "languag": [0, 1, 12], "model": [0, 5, 7, 9, 12, 13], "semant": [0, 7, 8, 11], "paramet": [0, 1, 3, 4, 5], "str": [0, 1, 3, 4, 5, 7, 10, 12], "option": [0, 1, 3, 4, 5, 9, 12], "The": [0, 1, 3, 4, 5, 7, 9, 10, 12, 13, 14], "name": [0, 1, 3, 4, 7, 8, 9, 10, 12, 13], "default": [0, 1, 3, 4, 5], "float": [0, 1, 3, 5, 9], "int": [0, 1, 3, 4, 5, 7], "basevector": [0, 5], "sentenc": [0, 5, 7, 9, 13], "transform": [0, 5, 9, 13], "all": [0, 10, 12, 13], "mpnet": [0, 13], "v2": [0, 13], "url": [0, 4, 7], "dict": [0, 3, 4, 5], "connect": [0, 4, 7, 10, 11, 13], "argument": [0, 4, 9], "client": [0, 4, 8, 9, 10], "searchindex": [0, 2, 10, 11, 12, 13], "underli": 0, "search": [0, 3, 4, 7, 8, 10, 11, 12], "us": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13], "rais": [0, 1, 3, 4, 5], "valueerror": [0, 1, 4, 5], "If": [0, 1, 3, 4, 5, 6, 7, 9], "i": [0, 1, 3, 4, 5, 7, 9, 10, 12, 13], "between": [0, 7, 10], "1": [0, 1, 7, 9, 10, 12, 13], "suppli": 0, "when": [0, 5], "construct": [0, 9, 10, 13], "manual": 0, "check": [0, 4, 7, 9, 12], "prompt": [0, 7, 12], "num_result": [0, 3, 7, 9, 13], "field": [0, 1, 3, 4, 7, 9, 10, 12, 13], "respons": [0, 7, 12], "whether": [0, 3, 5], "contain": [0, 4, 5, 10], "specifi": [0, 9, 10], "list": [0, 1, 3, 4, 5, 7], "number": [0, 3, 4, 7, 9, 12, 13], "result": [0, 3, 4, 7, 8, 9, 10, 12, 13], "return": [0, 1, 3, 4, 5, 7, 9, 10, 12], "neither": 0, "nor": 0, "": [0, 1, 7, 10, 12, 13], "type": [0, 1, 3, 4, 5, 9, 10, 12], "clear": [0, 12], "kei": [0, 4, 5, 7, 9, 12, 13], "classmethod": [0, 4], "from_index": 0, "kwarg": [0, 4], "creat": [0, 1, 4, 5, 7, 8, 10, 11, 12], "from": [0, 1, 4, 5, 7, 8, 9, 10, 12, 13], "pre": [0, 13], "exist": [0, 4, 11], "backbon": 0, "A": [0, 1, 3, 4, 7, 10], "hash_input": 0, "hash": [0, 4, 9, 12], "input": [0, 5], "sha256": 0, "set_threshold": [0, 12], "set": [0, 3, 4, 7, 10], "set_ttl": 0, "an": [0, 1, 4, 5, 7, 10, 11, 12, 13], "integ": [0, 7], "store": [0, 7, 9, 10, 12, 13], "metadata": [0, 7], "valu": [0, 1, 9, 10, 12], "pair": 0, "along": [0, 4, 8], "properti": [0, 3, 4], "_filter": 1, "oper": [1, 10], "left": 1, "right": 1, "logic": 1, "express": 1, "filterfield": 1, "can": [1, 5, 7, 9, 10, 13], "combin": [1, 11], "complex": [1, 9, 10], "evalu": 1, "queri": [1, 2, 4, 7, 8, 11, 12, 13], "thi": [1, 4, 5, 6, 7, 8, 9, 10, 12, 13], "present": 1, "interfac": [1, 8, 12], "which": [1, 7, 13], "user": [1, 7, 8, 9, 10, 12], "without": [1, 12], "have": [1, 7, 8, 9, 10, 13], "know": [1, 7], "ar": [1, 6, 7, 9, 10, 14], "directli": [1, 4, 9], "instead": [1, 10], "thei": [1, 7, 9], "built": [1, 4, 7, 13], "exampl": [1, 4, 7, 8, 9, 10, 12, 13], "import": [1, 4, 7, 9, 10, 12, 13], "brand_is_nik": 1, "brand": 1, "nike": 1, "price_is_over_100": 1, "price": 1, "100": [1, 10, 12], "print": [1, 7, 9, 10, 12, 13], "inf": [1, 10], "vectorqueri": [1, 2, 7, 9, 10, 13], "v": [1, 10, 13], "5": [1, 7, 9, 10], "vector_field_nam": [1, 3, 7, 9, 10, 13], "product_embed": 1, "return_field": [1, 3, 7, 9, 10, 13], "product_id": 1, "filter_express": [1, 3, 10], "filteroper": 1, "repres": [1, 3, 9], "against": 1, "__eq__": 1, "other": [1, 8, 11], "equal": 1, "union": [1, 11], "__init__": 1, "__ne__": 1, "inequ": 1, "__str__": 1, "syntax": 1, "__hash__": 1, "__weakref__": 1, "weak": 1, "refer": 1, "defin": [1, 10, 11], "job": [1, 9, 10], "engin": [1, 9, 10, 12], "__mod__": 1, "like": [1, 9, 10, 13], "self": 1, "numer": [1, 7, 9, 11], "zipcod": 1, "90210": 1, "__ge__": 1, "greater": [1, 7], "than": [1, 7, 9, 10], "ag": [1, 9, 10], "18": [1, 10], "__gt__": 1, "__le__": 1, "less": 1, "__lt__": 1, "geograph": [1, 11, 13], "lat": 1, "lon": 1, "geospec": 1, "spec": 1, "locat": [1, 5, 10, 13], "122": [1, 10], "4194": [1, 10], "37": [1, 10], "7749": [1, 10], "unit": 1, "m": [1, 7], "longitud": 1, "latitud": 1, "radiu": [1, 10], "km": [1, 10], "specif": [1, 9, 10, 12], "center": 1, "circl": 1, "one": [1, 10], "mi": 1, "ft": [1, 4], "asyncsearchindex": [2, 7, 9], "filter": [2, 3, 8, 11], "filterexpress": [2, 3, 10], "tag": [2, 7, 9, 11], "num": [2, 10], "geo": [2, 10], "georadiu": [2, 10], "openaitextvector": [2, 7, 13], "vertexaitextvector": [2, 13], "llmcach": [2, 8, 11], "semanticcach": [2, 7, 12], "dtype": [3, 9], "float32": [3, 9, 10], "10": [3, 4, 5, 10, 13], "return_scor": 3, "true": [3, 4, 7, 9, 10, 13], "basevectorqueri": 3, "read": 3, "more": [3, 9, 10], "http": [3, 5, 7, 8, 13], "io": 3, "doc": [3, 10, 13, 14], "interact": [3, 4, 8], "knn": [3, 10], "appli": [3, 10], "bool": [3, 4, 5], "score": [3, 10], "typeerror": [3, 5], "get_filt": 3, "get": [3, 4, 7, 8, 10, 11, 13], "set_filt": [3, 10], "param": [3, 10, 13], "ani": [3, 4, 8, 10], "py": [3, 4, 9, 11], "command": [3, 7, 8], "rvl": [4, 7, 9, 10, 12, 13], "storage_typ": 4, "searchindexbas": 4, "databas": [4, 8], "wrapper": 4, "around": 4, "provid": [4, 5, 7, 8, 11, 12], "purpos": [4, 10], "method": [4, 10], "from_yaml": [4, 7, 9, 13], "schema": [4, 10, 11, 13], "yaml": [4, 7, 9, 13], "overwrit": [4, 9, 10, 13], "load": [4, 7, 10, 11, 13], "data": [4, 10, 11, 13], "iter": [4, 9, 10, 13], "dictionari": [4, 5, 9, 10, 13], "instanc": [4, 7, 9, 10, 13], "env": 4, "var": 4, "except": 4, "connectionerror": 4, "fail": 4, "fals": [4, 5, 10, 12, 13], "alreadi": 4, "responseerror": 4, "delet": [4, 9, 12], "drop": [4, 7], "document": [4, 14], "doe": [4, 10], "disconnect": 4, "otherwis": 4, "from_dict": [4, 9, 10], "schema_dict": 4, "from_exist": [4, 9], "includ": [4, 7, 9, 10, 13], "schema_path": 4, "file": [4, 9, 13], "path": [4, 13], "info": [4, 9, 12], "inform": [4, 9, 12], "about": [4, 7], "key_field": 4, "within": [4, 7, 9, 10, 12], "record": [4, 7, 9, 10], "run": [4, 7, 8, 9, 10, 13], "similar": [4, 7, 8, 9, 10, 12, 13], "take": [4, 9, 10], "basequeri": 4, "allow": [4, 9], "usag": 4, "raw": [4, 5, 11], "string": [4, 5, 11], "post": 4, "process": [4, 13], "arg": 4, "perform": [4, 5, 7, 8, 9, 10, 11], "add": [4, 9], "pass": [4, 5], "rest": 4, "asynchron": [4, 5, 11], "async": [4, 5, 7], "concurr": 4, "task": 4, "api_config": [5, 7, 13], "emb": [5, 7, 13], "preprocess": 5, "as_buff": [5, 7, 13], "chunk": 5, "hug": 5, "face": 5, "callabl": 5, "befor": [5, 9, 10, 13], "convert": [5, 9], "embed": [5, 8, 9, 11], "byte": [5, 9, 13], "wrong": 5, "embed_mani": [5, 7, 13], "batch_siz": 5, "1000": [5, 7], "mani": [5, 9, 13], "batch": 5, "size": [5, 7], "test": [5, 12, 13], "openai": [5, 6, 8, 9, 11, 12], "api": [5, 7, 8, 9, 12, 13], "It": [5, 7, 10], "requir": [5, 9, 10], "obtain": [5, 12], "com": [5, 7], "initi": [5, 11], "importerror": 5, "librari": [5, 9, 13], "instal": [5, 7, 9, 10, 13], "aemb": 5, "aembed_mani": [5, 13], "textembed": 5, "gecko": 5, "vertexai": [5, 11], "palm": 5, "2": [5, 7, 9, 10, 12, 13], "activ": [5, 7, 9, 10, 13], "gcp": [5, 13], "project": [5, 13], "applic": [5, 8, 9, 12], "credenti": [5, 13], "googl": [5, 13], "cloud": [5, 8, 13], "aiplatform": [5, 13], "you": [6, 7, 9, 10, 13], "pleas": 6, "consid": 6, "ad": 6, "your": [6, 7, 8, 12, 13], "page": 6, "open": [6, 10], "pull": [6, 7], "request": [6, 12, 13], "github": 6, "question": [6, 12], "answer": [6, 12], "llm": [6, 8, 12, 13], "recommend": 6, "hotel": 6, "show": [7, 10, 13], "how": [7, 9, 10, 12, 13], "In": [7, 9, 10, 13], "notebook": [7, 9, 10, 12, 13], "we": [7, 9, 10, 12, 13], "download": [7, 13], "dataset": [7, 9, 10], "wikipedia": 7, "articl": [7, 9], "thank": 7, "cdn": 7, "each": [7, 9], "simpl": [7, 9, 13], "gpt": 7, "3": [7, 9, 10, 12, 13], "imag": 7, "below": [7, 9], "architectur": 7, "order": [7, 9], "need": [7, 9, 10, 13], "redisearch": [7, 9, 10, 13], "local": [7, 8, 9, 10, 13], "do": 7, "follow": [7, 9, 10, 14], "termin": 7, "docker": [7, 8, 13], "vecdb": 7, "d": [7, 8, 13], "p": [7, 8, 13], "8001": [7, 8, 13], "stack": [7, 8, 13], "latest": [7, 8, 13], "also": [7, 8, 9, 10, 13], "redisinsight": [7, 13], "gui": [7, 8], "next": [7, 9, 12], "depend": 7, "first": [7, 12, 13], "few": 7, "thing": 7, "pip": [7, 8, 13], "panda": 7, "wget": 7, "tenac": 7, "tiktoken": 7, "pd": 7, "embeddings_url": 7, "wikipedia_articles_2000": 7, "csv": 7, "df": 7, "read_csv": 7, "column": [7, 9], "unnam": 7, "head": 7, "id": [7, 10, 13], "titl": 7, "3661": 7, "org": 7, "wiki": 7, "photon": 7, "greek": 7, "\u03c6\u03c9\u03c2": 7, "mean": [7, 10], "light": 7, "7796": 7, "thoma": 7, "20dolbi": 7, "dolbi": 7, "born": 7, "morgan": 7, "robertson": 7, "14": [7, 9, 10], "67912": 7, "embroideri": 7, "art": 7, "decor": 7, "fabric": 7, "44309": 7, "consecut": 7, "ea": 7, "4": [7, 9, 10, 13], "41741": 7, "german": 7, "20empir": 7, "empir": 7, "deutsch": 7, "reich": 7, "deut": 7, "smaller": 7, "piec": 7, "becaus": [7, 10], "maximum": 7, "length": 7, "sent": [7, 12], "code": 7, "heavili": 7, "text_embedding_chunk_s": 7, "embeddings_model": 7, "ada": [7, 13], "002": [7, 13], "def": [7, 12], "n": 7, "token": [7, 10, 12], "encod": 7, "yield": 7, "success": 7, "split": 7, "prefer": 7, "end": [7, 12], "while": [7, 9, 10], "len": [7, 13], "find": [7, 10, 13], "nearest": 7, "rang": [7, 11], "j": 7, "min": 7, "decod": 7, "full": 7, "stop": 7, "newlin": 7, "endswith": 7, "break": 7, "found": 7, "get_unique_id_for_file_chunk": 7, "chunk_index": 7, "chunk_text": 7, "chunked_record": 7, "file_body_str": 7, "tupl": 7, "text_chunk": 7, "token_chunk": 7, "f": [7, 12], "enumer": 7, "doc_id": 7, "append": 7, "content": 7, "file_chunk_index": 7, "initialis": 7, "oai_token": 7, "get_encod": 7, "cl100k_base": 7, "_": 7, "iterrow": 7, "extend": 7, "chunked_data": 7, "datafram": 7, "nphoton": 7, "nelementari": 7, "particl": 7, "nthoma": 7, "nembroideri": 7, "nconsecut": 7, "numb": 7, "With": [7, 9], "broken": 7, "up": [7, 8, 9, 13], "o": [7, 12, 13], "getpass": [7, 12, 13], "api_kei": [7, 12, 13], "getenv": [7, 12], "openai_api_kei": [7, 12, 13], "enter": [7, 12, 13], "oaip": 7, "tolist": 7, "now": [7, 9, 13], "them": [7, 13], "writefil": 7, "wiki_schema": 7, "oaiwiki": 7, "dim": [7, 9, 10, 13], "1536": [7, 13], "distance_metr": [7, 9, 10, 13], "cosin": [7, 9, 10, 13], "algorithm": [7, 9, 10, 13], "flat": [7, 9, 10, 13], "write": [7, 9], "await": [7, 9, 13], "listal": [7, 9, 10, 13], "32m14": 7, "48": 7, "22": 7, "0m": [7, 9, 10, 13], "34m": [7, 9, 10, 13], "30minfo": [7, 9, 10, 13], "indic": [7, 8, 9, 10, 13], "to_dict": 7, "orient": 7, "three": 7, "action": 7, "most": 7, "make": [7, 8, 9, 13], "retriev": 7, "send": 7, "chat_model": 7, "turbo": 7, "make_prompt": 7, "retrieval_prompt": 7, "custom": 7, "ha": [7, 10, 13], "t": [7, 10, 13], "guess": 7, "respond": [7, 12], "don": [7, 10], "retrieve_context": 7, "query_embed": [7, 13], "top": 7, "vector_queri": 7, "answer_quest": [7, 12], "context": 7, "chatcomplet": 7, "acreat": 7, "messag": 7, "role": 7, "max_token": [7, 12], "500": 7, "choic": [7, 12], "textwrap": 7, "what": [7, 9, 10, 12, 13], "brontosauru": 7, "wrap": 7, "width": 7, "80": 7, "herbivor": 7, "dinosaur": 7, "live": 7, "dure": 7, "late": 7, "jurass": 7, "period": 7, "known": 7, "its": 7, "long": [7, 9], "neck": 7, "tail": 7, "well": [7, 9], "massiv": 7, "part": 7, "sauropod": 7, "famili": 7, "often": [7, 9], "depict": 7, "peacefulli": 7, "graze": 7, "veget": 7, "howev": 7, "note": [7, 9], "wa": 7, "onc": [7, 13], "thought": 7, "been": [7, 10], "same": [7, 9, 10, 12, 13], "apatosauru": 7, "recent": 7, "research": 7, "two": [7, 10], "distinct": 7, "speci": 7, "sens": 7, "trackiosamidon": 7, "tell": 7, "me": 7, "life": 7, "alani": 7, "morissett": 7, "canadian": 7, "american": 7, "singer": 7, "songwrit": 7, "actress": 7, "she": 7, "rose": 7, "fame": 7, "1990": 7, "her": 7, "album": 7, "jag": 7, "littl": 7, "pill": 7, "becam": 7, "major": 7, "hit": 7, "earn": 7, "sever": 7, "grammi": 7, "award": 7, "year": 7, "introspect": 7, "confession": 7, "style": 7, "address": 7, "theme": 7, "love": 7, "relationship": 7, "person": [7, 13], "struggl": 7, "music": 7, "apart": 7, "career": 7, "ventur": 7, "act": 7, "appear": 7, "variou": 7, "film": 7, "tv": 7, "overal": 7, "had": 7, "signific": 7, "impact": 7, "industri": 7, "continu": 7, "inspir": 7, "fan": 7, "power": [7, 8], "emot": 7, "abov": [7, 9, 13], "pretti": 7, "good": 7, "previou": [7, 12], "enough": [7, 12], "reduc": [7, 12], "increas": [7, 8], "qp": [7, 8], "assum": 7, "expect": [7, 9, 10, 13], "ask": 7, "8": [7, 9], "time": [7, 9, 12], "start": [7, 8, 11, 12], "taken": [7, 12], "11": [7, 12], "857624769210815": 7, "june": 7, "1974": 7, "ottawa": 7, "canada": 7, "began": 7, "earli": 7, "gain": [7, 13], "intern": 7, "recognit": 7, "third": 7, "studio": 7, "releas": [7, 10], "1995": 7, "huge": 7, "commerci": 7, "sell": 7, "million": 7, "copi": 7, "worldwid": 7, "throughout": 7, "evolv": 7, "incorpor": 7, "element": 7, "rock": 7, "pop": 7, "altern": 7, "some": [7, 10], "popular": [7, 13], "song": 7, "oughta": 7, "iron": 7, "hand": 7, "my": 7, "pocket": 7, "besid": 7, "movi": 7, "involv": 7, "philanthrop": 7, "spoken": 7, "openli": 7, "eat": 7, "disord": 7, "mental": 7, "health": 7, "influenti": 7, "leav": 7, "last": 7, "lyric": 7, "save": [7, 12], "monei": 7, "22634601593017578": 7, "isn": 7, "exactli": 7, "case": [7, 10], "who": 7, "48161983489990234": 7, "python": [8, 9], "leverag": 8, "speed": [8, 13], "reliabl": 8, "capabl": [8, 12], "supercharg": 8, "manag": 8, "manipul": [8, 10, 12], "cli": [8, 9, 10, 13], "support": [8, 10, 13], "creation": [8, 9, 12], "line": 8, "eas": 8, "decreas": [8, 12], "cost": 8, "galleri": 8, "explor": [8, 10], "our": [8, 9, 13], "Then": [8, 13], "sure": [8, 9, 10, 13], "access": [8, 13], "featur": [8, 13], "enabl": [8, 10], "spin": 8, "insight": 8, "guid": 8, "dedic": 9, "help": 9, "walk": 9, "through": [9, 10], "environ": [9, 10, 12, 13], "For": [9, 10, 13], "overli": 9, "simplifi": 9, "numpi": 9, "np": 9, "jupyterutil": [9, 10], "table_print": [9, 10], "john": [9, 10], "credit_scor": [9, 10], "high": [9, 10], "mari": 9, "doctor": [9, 10], "low": [9, 10], "joe": 9, "dentist": 9, "medium": 9, "entri": 9, "sub": 9, "want": [9, 10], "These": [9, 10], "just": [9, 10], "dummi": 9, "illustr": 9, "point": [9, 10, 13], "see": [9, 10, 13], "As": 9, "seen": 9, "sampl": 9, "turn": [9, 12], "fairli": 9, "trivial": 9, "arrai": 9, "tobyt": 9, "zip": [9, 13], "user_embed": [9, 10], "useragejobcredit_scoreuser_embeddingjohn1engineerhighb": 9, "xcd": [9, 10], "xcc": [9, 10], "x00": [9, 10], "mary2doctorlowb": 9, "joe3dentistmediumb": 9, "fff": [9, 10], "readi": 9, "step": 9, "flexibl": 9, "either": [9, 10], "There": 9, "coupl": 9, "main": 9, "compon": 9, "determin": 9, "avail": [9, 14], "correspond": 9, "so": [9, 10], "given": [9, 10], "user_index": [9, 10], "v1": [9, 10], "credit_stor": 9, "hnsw": 9, "look": [9, 12, 13], "datatyp": [9, 10], "fine": 9, "new": [9, 10], "automat": [9, 12], "background": 9, "yet": [9, 10, 13], "32m15": 9, "34": 9, "storag": [9, 12], "attribut": [9, 12], "separ": 9, "weight": 9, "function": [9, 10], "newli": 9, "popul": 9, "demonstr": 9, "work": 9, "product": 9, "much": 9, "larger": 9, "machin": 9, "learn": 9, "e": 9, "coher": 9, "result_print": [9, 10], "vector_dist": [9, 10, 13], "idvector_distanceuseragejobcredit_scorev1": 9, "1d91681e86f64175ac2a85d5c0d82c040john1engineerhighv1": 9, "336fba2e3e8846d0be5689a8f21da1490mary2doctorlowv1": 9, "3a059b1b202c416f9a661ed1b60e7d610": 9, "653301358223joe3dentistmedium": 9, "existing_index": 9, "done": 9, "mai": [9, 10], "fastapi": 9, "again": [9, 10, 12, 13], "a88e113051364b94bbefa29d6234725d0john1engineerhighv1": 9, "f850fc9073b8420984acfc79e960fdb40mary2doctorlowv1": 9, "c0aecbe4ffe14c15b574563228ea000e0": 9, "stat": [9, 12], "statist": [9, 12], "num_doc": [9, 12], "num_term": [9, 12], "max_doc_id": [9, 12], "num_record": [9, 12], "13": [9, 13], "percent_index": [9, 12], "hash_indexing_failur": [9, 12], "number_of_us": [9, 12], "bytes_per_record_avg": [9, 12], "46154": 9, "doc_table_size_mb": [9, 12], "000294685": 9, "inverted_sz_mb": [9, 12], "05176e": 9, "05": [9, 12], "key_table_size_mb": [9, 12], "000110626": 9, "offset_bits_per_record_avg": [9, 12], "offset_vectors_sz_mb": [9, 12], "8147e": 9, "06": 9, "offsets_per_term_avg": [9, 12], "307692": 9, "records_per_doc_avg": [9, 12], "33333": 9, "sortable_values_size_mb": [9, 12], "total_indexing_tim": [9, 12], "total_inverted_index_block": [9, 12], "vector_index_sz_mb": [9, 12], "164604": 9, "clean": 9, "pickl": 10, "util": 10, "hybrid_example_data": 10, "pkl": 10, "rb": 10, "useragejobcredit_scoreoffice_locationuser_embeddingjohn18engineerhigh": 10, "7749b": 10, "derrick14doctorlow": 10, "nancy94doctorhigh": 10, "333": 10, "tyler100engineerhigh": 10, "0839": 10, "3861b": 10, "tim12dermatologisthigh": 10, "taimur15ceolow": 10, "x9a": 10, "x99": 10, "x19": 10, "joe35dentistmedium": 10, "office_loc": 10, "32m17": 10, "09": 10, "16": 10, "multipl": 10, "certain": 10, "distanc": 10, "singl": 10, "categor": 10, "vector_distanceusercredit_scoreagejoboffice_location0johnhigh18engin": 10, "77490": 10, "109129190445tylerhigh100engin": 10, "38610": 10, "158809006214timhigh12dermatologist": 10, "266666650772nancyhigh94doctor": 10, "negat": 10, "vector_distanceusercredit_scoreagejoboffice_location0derricklow14doctor": 10, "217882037163taimurlow15ceo": 10, "653301358223joemedium35dentist": 10, "3861": 10, "isol": 10, "numeric_filt": 10, "15": 10, "exact": 10, "match": 10, "entir": 10, "quick": 10, "brown": 10, "fox": 10, "jump": 10, "over": [10, 12], "lazi": 10, "dog": [10, 13], "text_filt": 10, "negate_text_filt": 10, "fuzzi": 10, "fuzzy_text_filt": 10, "doct": 10, "kilomet": 10, "mile": 10, "meter": 10, "feet": 10, "san": 10, "francisco": 10, "offic": 10, "geo_filt": 10, "77490derricklow14doctor": 10, "vector_distanceusercredit_scoreagejoboffice_location0": 10, "20": 10, "30": 10, "93": 10, "sql": 10, "filterqueri": 10, "solei": 10, "has_low_credit": 10, "filter_queri": 10, "usercredit_scoreagejobderricklow14doctortaimurlow15ceo": 10, "where": [10, 13], "onli": 10, "distance_threshold": 10, "quantit": 10, "rangequeri": 10, "range_queri": 10, "vector_distanceusercredit_scoreagejob0johnhigh18engineer0derricklow14doctor0": 10, "109129190445tylerhigh100engineer0": 10, "chang": 10, "here": [10, 12, 13], "small": 10, "fewer": 10, "set_distance_threshold": 10, "vector_distanceusercredit_scoreagejob0johnhigh18engineer0derricklow14doctor": 10, "limit": 10, "being": 10, "aka": 10, "is_engin": 10, "vector_distanceusercredit_scoreagejob0johnhigh18engin": 10, "sometim": 10, "cover": 10, "explicit": 10, "haven": 10, "implement": 10, "veri": 10, "possibl": 10, "execut": [10, 11], "redis_py_queri": 10, "choos": [10, 13], "sort": 10, "sort_bi": 10, "asc": 10, "vector_distanceageusercredit_scorejoboffice_location0": 10, "109129190445100tylerhighengin": 10, "26666665077294nancyhighdoctor": 10, "21788203716315taimurlowceo": 10, "3861014derricklowdoctor": 10, "15880900621412timhighdermatologist": 10, "might": 10, "simpli": 10, "convers": 10, "current": [10, 14], "r": 10, "__dict__": 10, "d78adb45342c4404a9c40afd4e65f51b": 10, "payload": 10, "a0a202b6398840c5ab2263b1fd4e704a": 10, "nanci": 10, "94": [10, 12], "1f3b15dfb4ed490186859c1b2cb3df82": 10, "tyler": 10, "465de540d9d54501b09b8e47a0116620": 10, "tim": 10, "12": 10, "dermatologist": 10, "gener": [10, 12], "debug": 10, "understand": 10, "let": 10, "credit": 10, "closest": 10, "emit": 10, "AS": 10, "6": 10, "sortbi": 10, "dialect": 10, "prepar": 11, "hybrid": 11, "intersect": 11, "inspect": 11, "therebi": 12, "servic": [12, 13], "expens": 12, "enhanc": 12, "go": 12, "tokenizers_parallel": [12, 13], "ask_openai": 12, "complet": 12, "davinci": 12, "003": 12, "200": 12, "strip": 12, "capit": 12, "franc": 12, "pari": 12, "upon": 12, "tutori": 12, "lookup": 12, "prompt_vector": 12, "realli": 12, "7": 12, "adversari": 12, "spain": 12, "measur": 12, "speedup": 12, "modul": [12, 13], "els": 12, "8732700347900391": 12, "cached_start": 12, "cached_answ": 12, "cached_end": 12, "percentag": 12, "round": 12, "04746699333190918": 12, "56": 12, "000134468": 12, "76566e": 12, "nan": 12, "211": 12, "00814": 12, "remov": 12, "item": 12, "todai": 13, "vertex": 13, "ai": 13, "port": 13, "necessari": 13, "differ": 13, "That": 13, "happi": 13, "nice": 13, "dai": 13, "setup": 13, "oai": 13, "dimens": 13, "001046799123287201": 13, "0031105349771678448": 13, "0024228920228779316": 13, "004480978474020958": 13, "010343699716031551": 13, "012758520431816578": 13, "00535263866186142": 13, "003002384677529335": 13, "007115328684449196": 13, "03378167003393173": 13, "sunni": 13, "017399806529283524": 13, "3427608653037169e": 13, "07": 13, "0014656063867732882": 13, "02562308870255947": 13, "019890939816832542": 13, "016027139499783516": 13, "0036763285752385855": 13, "0008253469131886959": 13, "006609130185097456": 13, "025165533646941185": 13, "asyncron": 13, "nlp": 13, "platform": 13, "train": 13, "off": 13, "shelf": 13, "To": 13, "websit": 13, "hf": 13, "fulli": 13, "pretrain": 13, "26": 13, "typic": 13, "accomplish": 13, "google_application_credenti": 13, "variabl": 13, "json": 13, "account": 13, "lastli": 13, "region": 13, "vtx": 13, "project_id": 13, "gcp_project_id": 13, "gcp_locat": 13, "ve": 13, "768": 13, "32m20": 13, "35": 13, "buffer": 13, "cat": 13, "query_param": 13, "160862445831": 13, "273598074913": 13, "744559526443": 13}, "objects": {"redisvl.index": [[4, 0, 1, "", "AsyncSearchIndex"], [4, 0, 1, "", "SearchIndex"]], "redisvl.index.AsyncSearchIndex": [[4, 1, 1, "", "client"], [4, 2, 1, "", "connect"], [4, 2, 1, "", "create"], [4, 2, 1, "", "delete"], [4, 2, 1, "", "disconnect"], [4, 2, 1, "", "exists"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_existing"], [4, 2, 1, "", "from_yaml"], [4, 2, 1, "", "info"], [4, 2, 1, "", "load"], [4, 2, 1, "", "query"], [4, 2, 1, "", "search"]], "redisvl.index.SearchIndex": [[4, 1, 1, "", "client"], [4, 2, 1, "", "connect"], [4, 2, 1, "", "create"], [4, 2, 1, "", "delete"], [4, 2, 1, "", "disconnect"], [4, 2, 1, "", "exists"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_existing"], [4, 2, 1, "", "from_yaml"], [4, 2, 1, "", "info"], [4, 2, 1, "", "load"], [4, 2, 1, "", "query"], [4, 2, 1, "", "search"]], "redisvl.llmcache.semantic": [[0, 0, 1, "", "SemanticCache"]], "redisvl.llmcache.semantic.SemanticCache": [[0, 2, 1, "", "check"], [0, 2, 1, "", "clear"], [0, 2, 1, "", "from_index"], [0, 2, 1, "", "hash_input"], [0, 1, 1, "", "index"], [0, 2, 1, "", "set_threshold"], [0, 2, 1, "", "set_ttl"], [0, 2, 1, "", "store"], [0, 1, 1, "", "threshold"], [0, 1, 1, "", "ttl"]], "redisvl.query": [[3, 0, 1, "", "VectorQuery"]], "redisvl.query.VectorQuery": [[3, 2, 1, "", "get_filter"], [3, 1, 1, "", "params"], [3, 1, 1, "", "query"], [3, 2, 1, "", "set_filter"]], "redisvl.query.filter": [[1, 0, 1, "", "FilterExpression"], [1, 0, 1, "", "Geo"], [1, 0, 1, "", "GeoRadius"], [1, 0, 1, "", "Num"], [1, 0, 1, "", "Tag"], [1, 0, 1, "", "Text"]], "redisvl.query.filter.Geo": [[1, 2, 1, "", "__eq__"], [1, 3, 1, "", "__hash__"], [1, 2, 1, "", "__ne__"], [1, 2, 1, "", "__str__"]], "redisvl.query.filter.GeoRadius": [[1, 2, 1, "", "__init__"]], "redisvl.query.filter.Num": [[1, 2, 1, "", "__eq__"], [1, 2, 1, "", "__ge__"], [1, 2, 1, "", "__gt__"], [1, 3, 1, "", "__hash__"], [1, 2, 1, "", "__le__"], [1, 2, 1, "", "__lt__"], [1, 2, 1, "", "__ne__"], [1, 2, 1, "", "__str__"]], "redisvl.query.filter.Tag": [[1, 2, 1, "", "__eq__"], [1, 3, 1, "", "__hash__"], [1, 2, 1, "", "__init__"], [1, 2, 1, "", "__ne__"], [1, 2, 1, "", "__str__"], [1, 3, 1, "", "__weakref__"]], "redisvl.query.filter.Text": [[1, 2, 1, "", "__eq__"], [1, 3, 1, "", "__hash__"], [1, 2, 1, "", "__mod__"], [1, 2, 1, "", "__ne__"], [1, 2, 1, "", "__str__"]], "redisvl.vectorize.text.huggingface": [[5, 0, 1, "", "HFTextVectorizer"]], "redisvl.vectorize.text.huggingface.HFTextVectorizer": [[5, 2, 1, "", "embed"], [5, 2, 1, "", "embed_many"]], "redisvl.vectorize.text.openai": [[5, 0, 1, "", "OpenAITextVectorizer"]], "redisvl.vectorize.text.openai.OpenAITextVectorizer": [[5, 2, 1, "", "aembed"], [5, 2, 1, "", "aembed_many"], [5, 2, 1, "", "embed"], [5, 2, 1, "", "embed_many"]], "redisvl.vectorize.text.vertexai": [[5, 0, 1, "", "VertexAITextVectorizer"]], "redisvl.vectorize.text.vertexai.VertexAITextVectorizer": [[5, 2, 1, "", "embed"], [5, 2, 1, "", "embed_many"]]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:method", "3": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"llmcach": [0, 7, 12], "semanticcach": 0, "filter": [1, 10], "filterexpress": 1, "tag": [1, 10], "text": [1, 7, 10, 13], "num": 1, "geo": 1, "georadiu": 1, "redisvl": [2, 7, 8, 9], "api": 2, "queri": [3, 9, 10], "vectorqueri": 3, "index": [4, 9], "searchindex": [4, 7, 9], "asyncsearchindex": 4, "vector": [5, 8, 13], "hftextvector": 5, "openaitextvector": 5, "vertexaitextvector": 5, "exampl": 6, "question": 7, "answer": 7, "openai": [7, 13], "setup": 7, "data": [7, 9], "prepar": [7, 9], "chunk": 7, "embed": [7, 13], "creation": 7, "construct": 7, "build": 7, "qna": 7, "system": 7, "improv": 7, "redi": [8, 10], "librari": 8, "instal": 8, "tabl": 8, "content": 8, "get": 9, "start": 9, "defin": 9, "schema": 9, "creat": [9, 13], "load": 9, "execut": 9, "connect": 9, "an": 9, "exist": 9, "asynchron": 9, "search": [9, 13], "hybrid": 10, "numer": 10, "geograph": 10, "combin": 10, "intersect": 10, "union": 10, "rang": 10, "other": 10, "py": 10, "raw": 10, "string": 10, "inspect": 10, "user": 11, "guid": 11, "semant": 12, "cach": 12, "initi": 12, "us": 12, "perform": 12, "huggingfac": 13, "vertexai": 13, "provid": 13, "version": 14}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"LLMCache": [[0, "llmcache"]], "SemanticCache": [[0, "semanticcache"]], "Filter": [[1, "filter"]], "FilterExpression": [[1, "filterexpression"]], "Tag": [[1, "tag"]], "Text": [[1, "text"]], "Num": [[1, "num"]], "Geo": [[1, "geo"]], "GeoRadius": [[1, "georadius"]], "RedisVL API": [[2, "redisvl-api"]], "RedisVL": [[2, null]], "Query": [[3, "query"], [10, "query"]], "VectorQuery": [[3, "vectorquery"]], "Index": [[4, "index"]], "SearchIndex": [[4, "searchindex"]], "AsyncSearchIndex": [[4, "asyncsearchindex"]], "Vectorizer": [[5, "vectorizer"]], "HFTextVectorizer": [[5, "hftextvectorizer"]], "OpenAITextVectorizer": [[5, "openaitextvectorizer"]], "VertexAITextVectorizer": [[5, "vertexaitextvectorizer"]], "Examples": [[6, "examples"]], "Question and Answer with OpenAI and RedisVL": [[7, "question-and-answer-with-openai-and-redisvl"]], "Setup": [[7, "setup"]], "Data Preparation": [[7, "data-preparation"], [9, "data-preparation"]], "Text Chunking": [[7, "text-chunking"]], "Embedding Creation": [[7, "embedding-creation"]], "Construct the SearchIndex": [[7, "construct-the-searchindex"]], "Build the QnA System": [[7, "build-the-qna-system"]], "Improve the QnA System with LLMCache": [[7, "improve-the-qna-system-with-llmcache"]], "Redis Vector Library (RedisVL)": [[8, "redis-vector-library-redisvl"]], "Installation": [[8, "installation"]], "Table of Contents": [[8, "table-of-contents"]], "Getting Started with RedisVL": [[9, "getting-started-with-redisvl"]], "Define Index Schema": [[9, "define-index-schema"]], "Create a SearchIndex": [[9, "create-a-searchindex"]], "Load Data into the Index": [[9, "load-data-into-the-index"]], "Executing Queries": [[9, "executing-queries"]], "Connecting to an Existing Index": [[9, "connecting-to-an-existing-index"]], "Asynchronous Search": [[9, "asynchronous-search"]], "Hybrid Queries": [[10, "hybrid-queries"]], "Tag Filters": [[10, "tag-filters"]], "Numeric Filters": [[10, "numeric-filters"]], "Text Filters": [[10, "text-filters"]], "Geographic Filters": [[10, "geographic-filters"]], "Combining Filters": [[10, "combining-filters"]], "Intersection (\u201cand\u201d)": [[10, "intersection-and"]], "Union (\u201cor\u201d)": [[10, "union-or"]], "Filter Queries": [[10, "filter-queries"]], "Range Queries": [[10, "range-queries"]], "Other Redis Queries": [[10, "other-redis-queries"]], "Redis-Py": [[10, "redis-py"]], "Raw Redis Query String": [[10, "raw-redis-query-string"]], "Inspecting Queries": [[10, "inspecting-queries"]], "User Guide": [[11, "user-guide"]], "Semantic Caching": [[12, "semantic-caching"]], "Initializing and using LLMCache": [[12, "initializing-and-using-llmcache"]], "Performance": [[12, "performance"]], "Vectorizers": [[13, "vectorizers"]], "Creating Text Embeddings": [[13, "creating-text-embeddings"]], "OpenAI": [[13, "openai"]], "Huggingface": [[13, "huggingface"]], "VertexAI": [[13, "vertexai"]], "Search with Provider Embeddings": [[13, "search-with-provider-embeddings"]], "Versions": [[14, "versions"]]}, "indexentries": {"semanticcache (class in redisvl.llmcache.semantic)": [[0, "redisvl.llmcache.semantic.SemanticCache"]], "check() (semanticcache method)": [[0, "redisvl.llmcache.semantic.SemanticCache.check"]], "clear() (semanticcache method)": [[0, "redisvl.llmcache.semantic.SemanticCache.clear"]], "from_index() (semanticcache class method)": [[0, "redisvl.llmcache.semantic.SemanticCache.from_index"]], "hash_input() (semanticcache method)": [[0, "redisvl.llmcache.semantic.SemanticCache.hash_input"]], "index (semanticcache property)": [[0, "redisvl.llmcache.semantic.SemanticCache.index"]], "set_threshold() (semanticcache method)": [[0, "redisvl.llmcache.semantic.SemanticCache.set_threshold"]], "set_ttl() (semanticcache method)": [[0, "redisvl.llmcache.semantic.SemanticCache.set_ttl"]], "store() (semanticcache method)": [[0, "redisvl.llmcache.semantic.SemanticCache.store"]], "threshold (semanticcache property)": [[0, "redisvl.llmcache.semantic.SemanticCache.threshold"]], "ttl (semanticcache property)": [[0, "redisvl.llmcache.semantic.SemanticCache.ttl"]], "filterexpression (class in redisvl.query.filter)": [[1, "redisvl.query.filter.FilterExpression"]], "geo (class in redisvl.query.filter)": [[1, "redisvl.query.filter.Geo"]], "georadius (class in redisvl.query.filter)": [[1, "redisvl.query.filter.GeoRadius"]], "num (class in redisvl.query.filter)": [[1, "redisvl.query.filter.Num"]], "tag (class in redisvl.query.filter)": [[1, "redisvl.query.filter.Tag"]], "text (class in redisvl.query.filter)": [[1, "redisvl.query.filter.Text"]], "__eq__() (geo method)": [[1, "redisvl.query.filter.Geo.__eq__"]], "__eq__() (num method)": [[1, "redisvl.query.filter.Num.__eq__"]], "__eq__() (tag method)": [[1, "redisvl.query.filter.Tag.__eq__"]], "__eq__() (text method)": [[1, "redisvl.query.filter.Text.__eq__"]], "__ge__() (num method)": [[1, "redisvl.query.filter.Num.__ge__"]], "__gt__() (num method)": [[1, "redisvl.query.filter.Num.__gt__"]], "__hash__ (geo attribute)": [[1, "redisvl.query.filter.Geo.__hash__"]], "__hash__ (num attribute)": [[1, "redisvl.query.filter.Num.__hash__"]], "__hash__ (tag attribute)": [[1, "redisvl.query.filter.Tag.__hash__"]], "__hash__ (text attribute)": [[1, "redisvl.query.filter.Text.__hash__"]], "__init__() (georadius method)": [[1, "redisvl.query.filter.GeoRadius.__init__"]], "__init__() (tag method)": [[1, "redisvl.query.filter.Tag.__init__"]], "__le__() (num method)": [[1, "redisvl.query.filter.Num.__le__"]], "__lt__() (num method)": [[1, "redisvl.query.filter.Num.__lt__"]], "__mod__() (text method)": [[1, "redisvl.query.filter.Text.__mod__"]], "__ne__() (geo method)": [[1, "redisvl.query.filter.Geo.__ne__"]], "__ne__() (num method)": [[1, "redisvl.query.filter.Num.__ne__"]], "__ne__() (tag method)": [[1, "redisvl.query.filter.Tag.__ne__"]], "__ne__() (text method)": [[1, "redisvl.query.filter.Text.__ne__"]], "__str__() (geo method)": [[1, "redisvl.query.filter.Geo.__str__"]], "__str__() (num method)": [[1, "redisvl.query.filter.Num.__str__"]], "__str__() (tag method)": [[1, "redisvl.query.filter.Tag.__str__"]], "__str__() (text method)": [[1, "redisvl.query.filter.Text.__str__"]], "__weakref__ (tag attribute)": [[1, "redisvl.query.filter.Tag.__weakref__"]], "vectorquery (class in redisvl.query)": [[3, "redisvl.query.VectorQuery"]], "get_filter() (vectorquery method)": [[3, "redisvl.query.VectorQuery.get_filter"]], "params (vectorquery property)": [[3, "redisvl.query.VectorQuery.params"]], "query (vectorquery property)": [[3, "redisvl.query.VectorQuery.query"]], "set_filter() (vectorquery method)": [[3, "redisvl.query.VectorQuery.set_filter"]], "asyncsearchindex (class in redisvl.index)": [[4, "redisvl.index.AsyncSearchIndex"]], "searchindex (class in redisvl.index)": [[4, "redisvl.index.SearchIndex"]], "client (asyncsearchindex property)": [[4, "redisvl.index.AsyncSearchIndex.client"]], "client (searchindex property)": [[4, "redisvl.index.SearchIndex.client"]], "connect() (asyncsearchindex method)": [[4, "redisvl.index.AsyncSearchIndex.connect"]], "connect() (searchindex method)": [[4, "redisvl.index.SearchIndex.connect"]], "create() (asyncsearchindex method)": [[4, "redisvl.index.AsyncSearchIndex.create"]], "create() (searchindex method)": [[4, "redisvl.index.SearchIndex.create"]], "delete() (asyncsearchindex method)": [[4, "redisvl.index.AsyncSearchIndex.delete"]], "delete() (searchindex method)": [[4, "redisvl.index.SearchIndex.delete"]], "disconnect() (asyncsearchindex method)": [[4, "redisvl.index.AsyncSearchIndex.disconnect"]], "disconnect() (searchindex method)": [[4, "redisvl.index.SearchIndex.disconnect"]], "exists() (asyncsearchindex method)": [[4, "redisvl.index.AsyncSearchIndex.exists"]], "exists() (searchindex method)": [[4, "redisvl.index.SearchIndex.exists"]], "from_dict() (asyncsearchindex class method)": [[4, "redisvl.index.AsyncSearchIndex.from_dict"]], "from_dict() (searchindex class method)": [[4, "redisvl.index.SearchIndex.from_dict"]], "from_existing() (asyncsearchindex class method)": [[4, "redisvl.index.AsyncSearchIndex.from_existing"]], "from_existing() (searchindex class method)": [[4, "redisvl.index.SearchIndex.from_existing"]], "from_yaml() (asyncsearchindex class method)": [[4, "redisvl.index.AsyncSearchIndex.from_yaml"]], "from_yaml() (searchindex class method)": [[4, "redisvl.index.SearchIndex.from_yaml"]], "info() (asyncsearchindex method)": [[4, "redisvl.index.AsyncSearchIndex.info"]], "info() (searchindex method)": [[4, "redisvl.index.SearchIndex.info"]], "load() (asyncsearchindex method)": [[4, "redisvl.index.AsyncSearchIndex.load"]], "load() (searchindex method)": [[4, "redisvl.index.SearchIndex.load"]], "query() (asyncsearchindex method)": [[4, "redisvl.index.AsyncSearchIndex.query"]], "query() (searchindex method)": [[4, "redisvl.index.SearchIndex.query"]], "search() (asyncsearchindex method)": [[4, "redisvl.index.AsyncSearchIndex.search"]], "search() (searchindex method)": [[4, "redisvl.index.SearchIndex.search"]], "hftextvectorizer (class in redisvl.vectorize.text.huggingface)": [[5, "redisvl.vectorize.text.huggingface.HFTextVectorizer"]], "openaitextvectorizer (class in redisvl.vectorize.text.openai)": [[5, "redisvl.vectorize.text.openai.OpenAITextVectorizer"]], "vertexaitextvectorizer (class in redisvl.vectorize.text.vertexai)": [[5, "redisvl.vectorize.text.vertexai.VertexAITextVectorizer"]], "aembed() (openaitextvectorizer method)": [[5, "redisvl.vectorize.text.openai.OpenAITextVectorizer.aembed"]], "aembed_many() (openaitextvectorizer method)": [[5, "redisvl.vectorize.text.openai.OpenAITextVectorizer.aembed_many"]], "embed() (hftextvectorizer method)": [[5, "redisvl.vectorize.text.huggingface.HFTextVectorizer.embed"]], "embed() (openaitextvectorizer method)": [[5, "redisvl.vectorize.text.openai.OpenAITextVectorizer.embed"]], "embed() (vertexaitextvectorizer method)": [[5, "redisvl.vectorize.text.vertexai.VertexAITextVectorizer.embed"]], "embed_many() (hftextvectorizer method)": [[5, "redisvl.vectorize.text.huggingface.HFTextVectorizer.embed_many"]], "embed_many() (openaitextvectorizer method)": [[5, "redisvl.vectorize.text.openai.OpenAITextVectorizer.embed_many"]], "embed_many() (vertexaitextvectorizer method)": [[5, "redisvl.vectorize.text.vertexai.VertexAITextVectorizer.embed_many"]]}})